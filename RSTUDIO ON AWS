EXERCISE : Running R on AWS
Create a VPC with a single Public Subnet (use AWS VPC Wizard):
select NAT instance instead of NAT Gateway.


1)Select the VPC you have just created;
2)Enable "Auto IP";
3)CONFIGURE INSTANCE DETAILS,
In "Advance details", add the following as text: 

$sudo yum update -y #Always good to do a complete package update before starting
$sudo yum install -y R  #Installs R
$sudo amazon-linux-extras install R3.4
$wget https://download2.rstudio.org/rstudio-server-rhel-1.1.463-x86_64.rpm #Downloads the latest Binary for install RStudio-Server
$sudo yum install -y rstudio-server-rhel-1.1.463-x86_64.rpm #Installs the binary you've just downloaded
$sudo yum install -y curl-devel #Installs curl-devel Library (not mandatory)
$useradd pandego #Add user
$echo pandego:123456 | chpasswd #Adds password to user ( pwd | chpasswd)
$sudo rstudio-server verify-installation #Runs a verification at last, to avoid the server not to run

- the "sudo" is to perform command as admin;
- the "-y" is to answer "yes" to any question prompted during installation;
- for the latest binary:
    - go to: https://www.rstudio.com/products/rstudio/download-server/
    - choose CentOS for the latest RSudio Server Binary directory;
    - replace the directory on the $wget command;
- "useradd" and "| chpasswd" adds an username and password, but by default you can just use "rstudio" for both;
- "rstudio-server verify-installation" will start the server, in case it didn't already (extra measure).

d) For its SG:
  - SSH Port 22 open, everywhere, and name it RStudio_SG;
  - Add a rule, "Custom TCT Rule", Port 8787 open (which is the default RStudio Server port), everywhere;
e) Launch the instance.
